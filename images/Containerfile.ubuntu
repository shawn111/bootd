ARG base=docker.io/library/ubuntu:rolling


FROM $base as composefs
RUN apt update
RUN apt install -y git autoconf m4 libglib2.0-dev libtool bison \
                   liblzma-dev e2fslibs-dev libgpgme-dev libsystemd-dev \
                   make libfuse3-dev \
                   gcc meson libssl-dev

RUN git clone https://github.com/containers/composefs.git /cfs
WORKDIR /cfs
RUN meson setup target --prefix=/cfs/target/usr --default-library=shared -Dfuse=enabled
RUN meson compile -C target
RUN meson install -C target


FROM $base
RUN apt update

## bootd required packages
# kernel / systemd
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y systemd dracut
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y linux-image-generic
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y overlayroot

RUN DEBIAN_FRONTEND=noninteractive apt-get install -y vim
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y less
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y udev lvm2 iproute2 kmod
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y sudo



COPY --from=composefs /cfs/target/usr /usr
## bootd parts
RUN mkdir -p /usr/lib/dracut/modules.d
COPY dracut.d /usr/lib/dracut/modules.d/80cfs-prepare-root

RUN dracut --list-modules --no-kernel

## make bootd-able initramfs.img
RUN dracut --force -a cfs-prepare-root --kver $(ls /usr/lib/modules)
RUN cp /boot/initrd.img-$(ls /usr/lib/modules) /usr/lib/modules/$(ls /usr/lib/modules)/initramfs.img
RUN cp /boot/vmlinuz-$(ls /usr/lib/modules) /usr/lib/modules/$(ls /usr/lib/modules)/vmlinuz
RUN cp -r /etc /usr/etc
RUN apt clean

# rhel
# /var/lib/rpm >> ../../usr/share/rpm

# deb
# /var/lib/dpkg >> ../usr/share/bootd/dpkg
# /var/lib/apt >> ../usr/share/bootd/apt

RUN mkdir -p /usr/share/bootd
RUN mv /var/lib/dpkg /usr/share/bootd
RUN mv /var/lib/apt /usr/share/bootd

## Refer ostree define
RUN rm -rf /root && ln -s var/roothome /root
RUN rm -rf /home && ln -s var/home /home
RUN rm -rf /mnt && ln -s var/mnt /mnt
RUN rm -rf /srv && ln -s var/srv /srv
